{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ghada\\\\Projects\\\\A-Recommendation-system-for-Facial-Skin-Care-using-Machine-Learning-Models-main\\\\frontend\\\\src\\\\views\\\\Components\\\\webCam.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from 'face-api.js';\n\n// MUI\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getWindowDimensions() {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n}\nconst aspectRatio = 4 / 3;\nconst thresholdPercentFace = 0.3;\nconst thresholdFaceScore = 0.7;\nfunction useWindowDimensions() {\n  _s();\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowDimensions;\n}\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\nconst WebcamCapture = ({\n  setImageSrc,\n  setOnPlay,\n  onPlay\n}) => {\n  _s2();\n  let camHeight = useWindowDimensions().height;\n  let camWidth = useWindowDimensions().width;\n  if (camHeight > camWidth) {\n    camHeight = Math.round(camWidth * aspectRatio);\n  } else {\n    camHeight = Math.round(camHeight * 0.9);\n    camWidth = Math.round(camHeight / aspectRatio);\n  }\n  const videoConstraints = {\n    height: camHeight,\n    width: camWidth,\n    facingMode: \"user\"\n  };\n\n  // useEffect( () =>\n  //     {\n  //         console.log(videoConstraints.height)\n  //         console.log(videoConstraints.width)\n  //     }, [videoConstraints.height, videoConstraints.width]\n  // )\n  const webcamRef = useRef(null);\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    console.log(imageSrc);\n    setImageSrc(imageSrc);\n  }, [webcamRef]);\n  const [initialising, setInitialising] = useState(false);\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URI = process.env.PUBLIC_URL + '/models';\n      setInitialising(true);\n      Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URI)\n      // faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URI),\n      // faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URI),\n      // faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URI),\n      ]).then(() => {\n        console.log(\"models imported\");\n      });\n    };\n    loadModels();\n  }, []);\n  const [faceOK, setFaceOK] = useState(null);\n  const handleVideoOnPlay = () => {\n    setInterval(async () => {\n      if (initialising) {\n        setInitialising(false);\n      }\n      let detections = [];\n      if (webcamRef.current !== null) detections = await faceapi.detectAllFaces(webcamRef.current.video, new faceapi.TinyFaceDetectorOptions());\n      if (detections.length > 1) {\n        // Multiple faces\n        setFaceOK(\"Multiple faces detected\");\n      } else if (detections[0] !== undefined) {\n        // One face\n        const boxArea = Math.round(detections[0].box.height) * Math.round(detections[0].box.width);\n        const ImageArea = detections[0].imageWidth * detections[0].imageHeight;\n        const percentFace = boxArea / ImageArea;\n        if (percentFace < thresholdPercentFace) {\n          // Not close enough\n          setFaceOK(\"Come closer\");\n        } else if (detections[0].score < thresholdFaceScore) {\n          // detected face score is low\n          setFaceOK(\"Blurry or Not enough lighting\");\n        } else {\n          // all conditions satisfied\n          setFaceOK(\"OK\");\n        }\n      } else {\n        // No face\n        setFaceOK(\"no face detected\");\n      }\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        textAlign: \"center\",\n        children: initialising ? \"Initialising...\" : faceOK\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n        id: \"webcam\",\n        audio: false,\n        height: videoConstraints.height,\n        width: videoConstraints.width,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: videoConstraints,\n        onUserMedia: handleVideoOnPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: capture,\n        variant: \"contained\",\n        disabled: initialising || faceOK !== \"OK\",\n        fullWidth: true,\n        children: \"Capture photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s2(WebcamCapture, \"9yapt0NgFoJS22iDVX2NZwthnY4=\", false, function () {\n  return [useWindowDimensions, useWindowDimensions];\n});\n_c = WebcamCapture;\nexport default WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["React","useRef","useCallback","useState","useEffect","Webcam","faceapi","Button","Grid","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","getWindowDimensions","innerWidth","width","innerHeight","height","window","aspectRatio","thresholdPercentFace","thresholdFaceScore","useWindowDimensions","_s","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","WebcamCapture","setImageSrc","setOnPlay","onPlay","_s2","camHeight","camWidth","Math","round","videoConstraints","facingMode","webcamRef","capture","imageSrc","current","getScreenshot","console","log","initialising","setInitialising","loadModels","MODEL_URI","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","then","faceOK","setFaceOK","handleVideoOnPlay","setInterval","detections","detectAllFaces","video","TinyFaceDetectorOptions","length","undefined","boxArea","box","ImageArea","imageWidth","imageHeight","percentFace","score","children","item","variant","component","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","id","audio","ref","screenshotFormat","onUserMedia","xs","onClick","disabled","fullWidth","_c","$RefreshReg$"],"sources":["D:/Ghada/Projects/A-Recommendation-system-for-Facial-Skin-Care-using-Machine-Learning-Models-main/frontend/src/views/Components/webCam.jsx"],"sourcesContent":["import React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from 'face-api.js';\n\n// MUI\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst aspectRatio = 4 / 3;\nconst thresholdPercentFace = 0.3;\nconst thresholdFaceScore = 0.7;\n\nfunction useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nconst WebcamCapture = ({ setImageSrc, setOnPlay, onPlay }) => {\n    let camHeight = useWindowDimensions().height\n    let camWidth = useWindowDimensions().width\n    if (camHeight > camWidth) {\n        camHeight = Math.round(camWidth * aspectRatio)\n    } else {\n        camHeight = Math.round(camHeight * 0.9)\n        camWidth = Math.round(camHeight / aspectRatio)\n    }\n    const videoConstraints = {\n        height: camHeight,\n        width: camWidth,\n        facingMode: \"user\"\n    };\n\n    // useEffect( () =>\n    //     {\n    //         console.log(videoConstraints.height)\n    //         console.log(videoConstraints.width)\n    //     }, [videoConstraints.height, videoConstraints.width]\n    // )\n    const webcamRef = useRef(null);\n    const capture = useCallback(\n        () => {\n            const imageSrc = webcamRef.current.getScreenshot();\n            console.log(imageSrc)\n            setImageSrc(imageSrc)\n        }, [webcamRef]\n    );\n\n    const [initialising, setInitialising] = useState(false)\n    useEffect(() => {\n        const loadModels = async () => {\n            const MODEL_URI = process.env.PUBLIC_URL + '/models';\n            setInitialising(true)\n            Promise.all([\n                faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URI),\n            ]).then(() => { console.log(\"models imported\") });\n        }\n        loadModels();\n    }, [])\n\n\n\n    const [faceOK, setFaceOK] = useState(null)\n    const handleVideoOnPlay = () => {\n        setInterval(async () => {\n            if (initialising) {\n                setInitialising(false)\n            }\n            let detections = []\n            if(webcamRef.current !== null)\n                detections = await faceapi.detectAllFaces(webcamRef.current.video, new faceapi.TinyFaceDetectorOptions());\n            if (detections.length > 1) {\n                // Multiple faces\n                setFaceOK(\"Multiple faces detected\")\n            }\n            else if (detections[0] !== undefined) {\n                // One face\n                const boxArea = Math.round(detections[0].box.height) * Math.round(detections[0].box.width)\n                const ImageArea = detections[0].imageWidth * detections[0].imageHeight\n                const percentFace = boxArea / ImageArea\n\n                if (percentFace < thresholdPercentFace) {\n                    // Not close enough\n                    setFaceOK(\"Come closer\")\n                } else if (detections[0].score < thresholdFaceScore) {\n                    // detected face score is low\n                    setFaceOK(\"Blurry or Not enough lighting\")\n                } else {\n                    // all conditions satisfied\n                    setFaceOK(\"OK\")\n                }\n            }\n            else {\n                // No face\n                setFaceOK(\"no face detected\")\n            }\n        }, 500)\n    }\n\n    return (\n        <>\n            <Grid item>\n                <Typography variant=\"h5\" component=\"div\" textAlign=\"center\">\n                    {initialising ? \"Initialising...\" : faceOK}\n                </Typography>\n                <Webcam\n                    id=\"webcam\"\n                    audio={false}\n                    height={videoConstraints.height}\n                    width={videoConstraints.width}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                    videoConstraints={videoConstraints}\n                    onUserMedia={handleVideoOnPlay} />\n            </Grid>\n            <Grid item xs={12}>\n                <Button\n                    onClick={capture}\n                    variant=\"contained\"\n                    disabled={(initialising) || (faceOK !== \"OK\")}\n                    fullWidth>\n                    Capture photo\n                </Button>\n            </Grid>\n        </>\n    );\n};\n\nexport default WebcamCapture"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}